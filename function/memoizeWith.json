{
  "name": "memoizeWith",
  "description": "Memoizes the function result so it is not computed for the same parameters. Uses the given equality function.",
  "signature": "(\n  equals: (x: any, y: any) => boolean\n) => (f: (...xs: any[]) => any) => (...args: any[]) => any",
  "examples": [
    {
      "language": "javascript",
      "content": "const f = ({ x }) => { console.log(x); return x + 1; };\n\nconst memoized = memoizeWith((a, b) => a.x === b.x)(f);\n\nmemoized({ x: 5 });\nmemoized({ x: 5 });\nmemoized({ x: 5 });\nmemoized({ x: 3 });"
    }
  ],
  "questions": ["How to memoize a function with custom equality function?"]
}
